{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\achal\\\\Desktop\\\\Achal 18\\\\web dev\\\\Webdev_code\\\\event-management\\\\frontend\\\\src\\\\components\\\\TaskTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskTracker = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    name: '',\n    deadline: '',\n    status: 'Pending',\n    assignedAttendee: '',\n    event: ''\n  });\n  const [events, setEvents] = useState([]);\n  const [attendees, setAttendees] = useState([]);\n  useEffect(() => {\n    // Fetch events and attendees from API\n    axios.get('http://localhost:5000/api/events').then(response => setEvents(response.data)).catch(error => console.log(error));\n    axios.get('http://localhost:5000/api/attendees').then(response => setAttendees(response.data)).catch(error => console.log(error));\n  }, []);\n  useEffect(() => {\n    // Fetch tasks for the selected event\n    if (newTask.event) {\n      axios.get(`http://localhost:5000/api/tasks/${newTask.event}`).then(response => setTasks(response.data)).catch(error => console.log(error));\n    }\n  }, [newTask.event]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask({\n      ...newTask,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Create task via API\n    axios.post('http://localhost:5000/api/tasks', newTask).then(response => setTasks([...tasks, response.data])).catch(error => console.log(error));\n  };\n  const handleStatusChange = (taskId, status) => {\n    // Update task status via API\n    axios.put(`http://localhost:5000/api/tasks/${taskId}`, {\n      status\n    }).then(response => {\n      setTasks(tasks.map(task => task._id === taskId ? response.data : task));\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Task Name\",\n        value: newTask.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"deadline\",\n        value: newTask.deadline,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"assignedAttendee\",\n        value: newTask.assignedAttendee,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Attendee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), attendees.map(attendee => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: attendee._id,\n          children: attendee.name\n        }, attendee._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"event\",\n        value: newTask.event,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: event._id,\n          children: event.name\n        }, event._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deadline: \", new Date(task.deadline).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStatusChange(task._id, task.status === 'Pending' ? 'Completed' : 'Pending'),\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskTracker, \"BVm3eoCkDtkwOSdwzfFt/tALzx8=\");\n_c = TaskTracker;\nexport default TaskTracker;\nvar _c;\n$RefreshReg$(_c, \"TaskTracker\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskTracker","_s","tasks","setTasks","newTask","setNewTask","name","deadline","status","assignedAttendee","event","events","setEvents","attendees","setAttendees","get","then","response","data","catch","error","console","log","handleChange","e","value","target","handleSubmit","preventDefault","post","handleStatusChange","taskId","put","map","task","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","attendee","className","Date","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/achal/Desktop/Achal 18/web dev/Webdev_code/event-management/frontend/src/components/TaskTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TaskTracker = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState({\r\n    name: '',\r\n    deadline: '',\r\n    status: 'Pending',\r\n    assignedAttendee: '',\r\n    event: '',\r\n  });\r\n\r\n  const [events, setEvents] = useState([]);\r\n  const [attendees, setAttendees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch events and attendees from API\r\n    axios.get('http://localhost:5000/api/events')\r\n      .then(response => setEvents(response.data))\r\n      .catch(error => console.log(error));\r\n\r\n    axios.get('http://localhost:5000/api/attendees')\r\n      .then(response => setAttendees(response.data))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch tasks for the selected event\r\n    if (newTask.event) {\r\n      axios.get(`http://localhost:5000/api/tasks/${newTask.event}`)\r\n        .then(response => setTasks(response.data))\r\n        .catch(error => console.log(error));\r\n    }\r\n  }, [newTask.event]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewTask({ ...newTask, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Create task via API\r\n    axios.post('http://localhost:5000/api/tasks', newTask)\r\n      .then(response => setTasks([...tasks, response.data]))\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  const handleStatusChange = (taskId, status) => {\r\n    // Update task status via API\r\n    axios.put(`http://localhost:5000/api/tasks/${taskId}`, { status })\r\n      .then(response => {\r\n        setTasks(tasks.map(task => task._id === taskId ? response.data : task));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Tracker</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Task Name\"\r\n          value={newTask.name}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"deadline\"\r\n          value={newTask.deadline}\r\n          onChange={handleChange}\r\n        />\r\n        <select\r\n          name=\"assignedAttendee\"\r\n          value={newTask.assignedAttendee}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\">Select Attendee</option>\r\n          {attendees.map((attendee) => (\r\n            <option key={attendee._id} value={attendee._id}>\r\n              {attendee.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <select\r\n          name=\"event\"\r\n          value={newTask.event}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\">Select Event</option>\r\n          {events.map((event) => (\r\n            <option key={event._id} value={event._id}>\r\n              {event.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\">Add Task</button>\r\n      </form>\r\n      <div>\r\n        {tasks.map((task) => (\r\n          <div key={task._id} className=\"task-card\">\r\n            <h3>{task.name}</h3>\r\n            <p>Deadline: {new Date(task.deadline).toLocaleDateString()}</p>\r\n            <p>Status: \r\n              <button\r\n                onClick={() => handleStatusChange(task._id, task.status === 'Pending' ? 'Completed' : 'Pending')}\r\n              >\r\n                {task.status}\r\n              </button>\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}